# Brute Force

class Solution(object):
    def maxArea(self, height):
        area = 0
        result = 0
        for left in range(len(height)):
            for right in range(left + 1, len(height)):
                area = min(height[left], height[right]) * (right - left)
                result = max(result, area)
        return result
        
       
  Two pointer version - 1
  
class Solution(object):
    def maxArea(self, height):
        result = 0
        left = 0
        right = len(height) - 1
        while left < right:
            area = min(height[left], height[right]) * (right - left)
            result = max(result, area)
            if( right - 1 == left):
                left += 1
                right = len(height) - 1
            else:
                right -= 1
        return result
     
Two pointer version - 2
class Solution(object):
    def maxArea(self, height):
        result = 0
        left = 0
        right = len(height) - 1
        while left < right:
            area = min(height[left], height[right]) * (right - left)
            result = max(result, area)
            if height[left] < height[right]:
                left += 1
            elif height[left] > height[right]:
                right -= 1
            elif height[left + 1] > height[left]:
                left +=1
            else:
                right -= 1
        return result
